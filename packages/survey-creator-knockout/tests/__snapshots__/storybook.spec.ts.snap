// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Action Bar Action Bar Item 1`] = `
<sv-action-bar-item
  params="item: item"
/>
`;

exports[`Storyshots Action Bar Action Bar Item Without Title 1`] = `
<sv-action-bar-item
  params="item: item"
/>
`;

exports[`Storyshots Action Bar Active Action Bar Item 1`] = `
<sv-action-bar-item
  params="item: item"
/>
`;

exports[`Storyshots Action Bar Desktop 1`] = `
<sv-action-bar
  params="items: items"
/>
`;

exports[`Storyshots Action Bar Disabled Action Bar Item 1`] = `
<sv-action-bar-item
  params="item: item"
/>
`;

exports[`Storyshots Button Action Button 1`] = `
<svc-button
  params="action: action, title: title, css: css"
>
  <button
    class="svc-button svc-button--action"
    data-bind="click: action, css: css, disable: disabled"
  >
    
  
    <span
      class="svc-button__text"
      data-bind="text: title"
    >
      Add a Question
    </span>
    

  </button>
  

</svc-button>
`;

exports[`Storyshots Button Disabled 1`] = `
<svc-button
  params="action: action, title: title, disabled: disabled"
>
  <button
    class="svc-button"
    data-bind="click: action, css: css, disable: disabled"
    disabled=""
  >
    
  
    <span
      class="svc-button__text"
      data-bind="text: title"
    >
      Button
    </span>
    

  </button>
  

</svc-button>
`;

exports[`Storyshots Button Disabled Action Button 1`] = `
<svc-button
  params="action: action, title: title, disabled: disabled, css: css"
>
  <button
    class="svc-button svc-button--action"
    data-bind="click: action, css: css, disable: disabled"
    disabled=""
  >
    
  
    <span
      class="svc-button__text"
      data-bind="text: title"
    >
      Add a Question
    </span>
    

  </button>
  

</svc-button>
`;

exports[`Storyshots Button Ordinary 1`] = `
<svc-button
  params="action: action, title: title"
>
  <button
    class="svc-button"
    data-bind="click: action, css: css, disable: disabled"
  >
    
  
    <span
      class="svc-button__text"
      data-bind="text: title"
    >
      Button
    </span>
    

  </button>
  

</svc-button>
`;

exports[`Storyshots Creator / Desktop or Landscape Tablet Default 1`] = `
<survey-creator
  params="creator: creator"
>
  <div
    class="svc-creator__area svc-flex-column"
  >
    
  
    <div
      class="svc-top-bar"
    >
      
    
      <!-- ko component: { name: 'svc-tabbed-menu', params: { items: creator.tabs } } -->
      <div
        class="svc-tabbed-menu"
      >
        
  
        <!-- ko foreach: items -->
        
  
        <span
          class="svc-tabbed-menu-item-container"
          data-bind="css: $data.css, style: { visibility : $data.isVisible? 'visible': 'hidden' }, visible: $data.visible === undefined || $data.visible"
        >
          
    
          <!-- ko component: { name: $data.component || 'svc-tabbed-menu-item', params: { item: $data } } -->
          
    
          <!-- /ko -->
          
  
        </span>
        
  
        <!-- /ko -->
        

      </div>
      

      <!-- /ko -->
      
    
      <!-- ko component: { name: 'sv-action-bar', params: { items: creator.toolbarItems } } -->
      <!-- /ko -->
      
  
    </div>
    
  
    <div
      class="svc-creator__content-wrapper svc-flex-row"
    >
      
    
      <div
        class="svc-creator__content-holder svc-flex-column"
      >
        
      
        <!-- ko foreach: creator.tabs -->
        
      
        <!-- ko if: $parent.creator.viewType == id -->
        
      
        <div
          class="svc-creator-tab"
        >
          
        
          <!-- ko component: { name: componentContent, params: { creator: $parent.creator, data: data } } -->
          <svc-toolbox
            params="categories: creator.toolboxCategories, creator: creator"
          >
            <div
              class="svc-toolbox"
            >
              
  
              <div
                class="svc-toolbox__category"
              >
                
    
                <!-- ko foreach: items -->
                
    
                <div
                  class="svc-toolbox__tool"
                  data-bind="css: $data.css, visible: $data.visible === undefined || $data.visible, style: { visibility : $data.isVisible ? 'visible': 'hidden' }"
                >
                  
      
                  <!-- ko if: $data.needSeparator -->
                  
      
                  <div
                    class="svc-toolbox__category-separator"
                  />
                  
      
                  <!-- /ko -->
                  
      
                  <!-- ko component: { name: $data.component || 'svc-toolbox-item', params: { item: $data, creator: $parents[1].creator } } -->
                  
      
                  <!-- /ko -->
                  
    
                </div>
                
    
                <!-- /ko -->
                
  
              </div>
              

            </div>
            

          </svc-toolbox>
          

          <div
            class="svc-tab-designer sd-root-modern"
            data-bind="css: survey.css.root"
          >
            
  
            <div
              class="sd-container-modern"
              data-bind="css: survey.css.container"
            >
              
    
              <div
                data-bind="click: function() { creator.selectElement(survey); }"
              >
                
      
                <!-- ko template: { name: 'survey-header', data: survey } -->
                <!-- /ko -->
                
    
              </div>
              
    
              <!-- ko if: survey.isShowProgressBarOnTop -->
              
    
              <!-- ko component: { name: 'sv-progress-' + survey.progressBarType, params: { model: survey } } -->
              <!-- /ko -->
              
    
              <!-- /ko -->
              
    
              <!-- ko foreach: survey.pages -->
              
    
              <svc-page
                data-bind="attr: { 'data-svc-drop-target-element-name': $data.name }"
                params="survey: $parent.survey, page: $data, creator: $parent.creator"
              />
              
    
              <!-- /ko -->
              
    
              <!-- ko if: showNewPage -->
              
    
              <svc-page
                data-bind="attr: { 'data-svc-drop-target-element-name': 'newGhostPage' }"
                params="survey: survey, creator: creator, page: newPage"
              />
              
    
              <!-- /ko -->
              
    
              <!-- ko if: survey.isShowProgressBarOnBottom -->
              
    
              <!-- ko component: { name: 'sv-progress-' + survey.progressBarType, params: { model: survey } } -->
              <!-- /ko -->
              
    
              <!-- /ko -->
              
  
            </div>
            

          </div>
          

          <svc-page-navigator
            params="creator: creator"
          />
          

          <div
            class="svc-flex-column svc-properties-wrapper"
          >
            
  
            <svc-property-panel
              params="model: creator"
            />
            

          </div>
          

          <!-- /ko -->
          
      
        </div>
        
      
        <!-- /ko -->
        
      
        
      
        <!-- ko if: $parent.creator.viewType == id -->
        <!-- /ko -->
        
      
        
      
        <!-- ko if: $parent.creator.viewType == id -->
        <!-- /ko -->
        
      
        
      
        <!-- ko if: $parent.creator.viewType == id -->
        <!-- /ko -->
        
      
        <!-- /ko -->
        
    
      </div>
      
  
    </div>
    

  </div>
  

</survey-creator>
`;

exports[`Storyshots Creator design surface content Default 1`] = `
<svc-tab-designer
  params="creator: creator"
>
  <svc-toolbox
    params="categories: creator.toolboxCategories, creator: creator"
  />
  

  <div
    class="svc-tab-designer"
    data-bind="css: survey.css.root"
  >
    
  
    <div
      data-bind="css: survey.css.container"
    >
      
    
      <div
        data-bind="click: function() { creator.selectElement(survey); }"
      >
        
      
        <!-- ko template: { name: 'survey-header', data: survey } -->
        
      
        <!-- /ko -->
        
    
      </div>
      
    
      <!-- ko if: survey.isShowProgressBarOnTop -->
      
    
      <!-- ko component: { name: 'sv-progress-' + survey.progressBarType, params: { model: survey } } -->
      <!-- /ko -->
      
    
      <!-- /ko -->
      
    
      <!-- ko foreach: survey.pages -->
      
    
      <svc-page
        data-bind="attr: { 'data-svc-drop-target-element-name': $data.name }"
        params="survey: $parent.survey, page: $data, creator: $parent.creator"
      />
      
    
      <!-- /ko -->
      
    
      <!-- ko if: showNewPage -->
      
    
      <svc-page
        data-bind="attr: { 'data-svc-drop-target-element-name': 'newGhostPage' }"
        params="survey: survey, creator: creator, page: newPage"
      />
      
    
      <!-- /ko -->
      
    
      <!-- ko if: survey.isShowProgressBarOnBottom -->
      
    
      <!-- ko component: { name: 'sv-progress-' + survey.progressBarType, params: { model: survey } } -->
      <!-- /ko -->
      
    
      <!-- /ko -->
      
  
    </div>
    

  </div>
  

  <svc-page-navigator
    params="creator: creator"
  />
  

  <div
    class="svc-flex-column svc-properties-wrapper"
  >
    
  
    <svc-property-panel
      params="model: creator"
    />
    

  </div>
  

</svc-tab-designer>
`;

exports[`Storyshots List Ordinary 1`] = `
<div
  data-bind="component: { name: 'sv-list', params: $data}"
  style="width: 250px"
/>
`;

exports[`Storyshots List With Disabled Item 1`] = `
<div
  data-bind="component: { name: 'sv-list', params: $data}"
  style="width: 250px"
/>
`;

exports[`Storyshots List With Icons 1`] = `
<div
  data-bind="component: { name: 'sv-list', params: $data}"
  style="width: 250px"
/>
`;

exports[`Storyshots List With Selection 1`] = `
<div
  data-bind="component: { name: 'sv-list', params: $data}"
  style="width: 250px"
/>
`;

exports[`Storyshots Page Navigator Page Navigator 1`] = `
<div
  style="width: 200px; display: flex; flex-direction: row-reverse;"
>
  <svc-page-navigator
    params="items: items"
  >
    <!-- ko if: visible -->
    

    <div
      class="svc-page-navigator__selector"
      data-bind="click: togglePageSelector, attr: { title: 'text' }"
    >
      
    
      <sv-svg-icon
        class="svc-page-navigator__navigator-icon"
        params="iconName: icon, size: 22"
      />
      
    
      <sv-popup
        params="model: popupModel, cssClass: 'svc-page-navigator__popup'"
      />
      

    </div>
    

    <!-- ko foreach: items -->
    

    <svc-page-navigator-item
      params="item: $data"
    />
    

    <!-- /ko -->
    

    <!-- /ko -->
    

  </svc-page-navigator>
</div>
`;

exports[`Storyshots Page Navigator Page Navigator Item 1`] = `
<div
  style="width: 200px; display: flex; flex-direction: row-reverse;"
>
  <svc-page-navigator-item
    params="item: item"
  >
    <div
      class="svc-page-navigator-item-content"
      data-bind="click: action, css: { 'svc-page-navigator-item--selected': active, 'svc-page-navigator-item--disabled': disabled }, attr: { title: text }"
      title="Page 1"
    >
      
  
      <div
        class="svc-page-navigator-item__dot"
      />
      

  
      <div
        class="svc-page-navigator-item__banner"
      >
        
    
        <span
          class="svc-text svc-text--normal"
          data-bind="text: text"
        >
          Page 1
        </span>
        
    
        <span
          class="svc-page-navigator-item__dot"
        />
        
  
      </div>
      

    </div>
    

  </svc-page-navigator-item>
</div>
`;

exports[`Storyshots Page Navigator Page Navigator Item Disabled 1`] = `
<div
  style="width: 200px; display: flex; flex-direction: row-reverse;"
>
  <svc-page-navigator-item
    params="item: item"
  >
    <div
      class="svc-page-navigator-item-content"
      data-bind="click: action, css: { 'svc-page-navigator-item--selected': active, 'svc-page-navigator-item--disabled': disabled }, attr: { title: text }"
      title="Disabled Page"
    >
      
  
      <div
        class="svc-page-navigator-item__dot"
      />
      

  
      <div
        class="svc-page-navigator-item__banner"
      >
        
    
        <span
          class="svc-text svc-text--normal"
          data-bind="text: text"
        >
          Disabled Page
        </span>
        
    
        <span
          class="svc-page-navigator-item__dot"
        />
        
  
      </div>
      

    </div>
    

  </svc-page-navigator-item>
</div>
`;

exports[`Storyshots Page Navigator Page Navigator Item Selected 1`] = `
<div
  style="width: 200px; display: flex; flex-direction: row-reverse;"
>
  <svc-page-navigator-item
    params="item: item"
  >
    <div
      class="svc-page-navigator-item-content svc-page-navigator-item--selected"
      data-bind="click: action, css: { 'svc-page-navigator-item--selected': active, 'svc-page-navigator-item--disabled': disabled }, attr: { title: text }"
      title="Page 1"
    >
      
  
      <div
        class="svc-page-navigator-item__dot"
      />
      

  
      <div
        class="svc-page-navigator-item__banner"
      >
        
    
        <span
          class="svc-text svc-text--normal"
          data-bind="text: text"
        >
          Page 1
        </span>
        
    
        <span
          class="svc-page-navigator-item__dot"
        />
        
  
      </div>
      

    </div>
    

  </svc-page-navigator-item>
</div>
`;

exports[`Storyshots Popup Modal Context Menu Ordinary 1`] = `
<div
  style="margin-left: 200px; margin-top: 200px; width: max-content; position: relative"
>
  
        
  <svc-button
    params="title: title, action: action"
  >
    <button
      class="svc-button"
      data-bind="click: action, css: css, disable: disabled"
    >
      
  
      <span
        class="svc-button__text"
        data-bind="text: title"
      >
        Show menu
      </span>
      

    </button>
    

  </svc-button>
  
        
  <sv-popup
    params="model: { contentComponentName: name, contentComponentData: model,
          isVisible: isVisible, verticalPosition: verticalPosition, horizontalPosition: horizontalPosition }"
  >
    
        
  </sv-popup>
  
      
</div>
`;

exports[`Storyshots Popup Modal Context Menu With Pointer 1`] = `
<div
  style="margin-left: 200px; margin-top: 200px; width: max-content; position: relative"
>
  
        
  <svc-button
    params="title: title, action: action"
  >
    <button
      class="svc-button"
      data-bind="click: action, css: css, disable: disabled"
    >
      
  
      <span
        class="svc-button__text"
        data-bind="text: title"
      >
        Show menu
      </span>
      

    </button>
    

  </svc-button>
  
        
  <sv-popup
    params="contentComponentName: name, contentComponentData: model,
          isVisible: isVisible, verticalPosition: verticalPosition,
          horizontalPosition: horizontalPosition, showPointer: showPointer"
  >
    
        
  </sv-popup>
  
      
</div>
`;

exports[`Storyshots Popup Modal Fast Entry 1`] = `

      
`;

exports[`Storyshots Tabbed Menu Tabbed Menu 1`] = `
<div>
  <!-- ko component: { name: 'svc-tabbed-menu', params: { items: items } } -->
  <div
    class="svc-tabbed-menu"
  >
    
  
    <!-- ko foreach: items -->
    
  
    <span
      class="svc-tabbed-menu-item-container"
      data-bind="css: $data.css, style: { visibility : $data.isVisible? 'visible': 'hidden' }, visible: $data.visible === undefined || $data.visible"
    >
      
    
      <!-- ko component: { name: $data.component || 'svc-tabbed-menu-item', params: { item: $data } } -->
      
    
      <!-- /ko -->
      
  
    </span>
    
  
    <!-- /ko -->
    

  </div>
  

  <!-- /ko -->
</div>
`;

exports[`Storyshots Tabbed Menu Tabbed Menu Item 1`] = `
<svc-tabbed-menu-item
  params="item: item"
>
  <div
    class="svc-tabbed-menu-item"
    data-bind="click: action, css: { 'svc-tabbed-menu-item--selected': active, 'svc-tabbed-menu-item--disabled': disabled }"
  >
    
  
    <span
      class="svc-text svc-text--normal svc-tabbed-menu-item__text"
      data-bind="text: title, css: { 'svc-text--bold': active }"
    >
      Menu Item
    </span>
    

  </div>
  

</svc-tabbed-menu-item>
`;

exports[`Storyshots Tabbed Menu Tabbed Menu Item Disabled 1`] = `
<svc-tabbed-menu-item
  params="item: item"
>
  <div
    class="svc-tabbed-menu-item svc-tabbed-menu-item--disabled"
    data-bind="click: action, css: { 'svc-tabbed-menu-item--selected': active, 'svc-tabbed-menu-item--disabled': disabled }"
  >
    
  
    <span
      class="svc-text svc-text--normal svc-tabbed-menu-item__text"
      data-bind="text: title, css: { 'svc-text--bold': active }"
    >
      Disabled Menu Item
    </span>
    

  </div>
  

</svc-tabbed-menu-item>
`;

exports[`Storyshots Tabbed Menu Tabbed Menu Item Selected 1`] = `
<svc-tabbed-menu-item
  params="item: item"
>
  <div
    class="svc-tabbed-menu-item svc-tabbed-menu-item--selected"
    data-bind="click: action, css: { 'svc-tabbed-menu-item--selected': active, 'svc-tabbed-menu-item--disabled': disabled }"
  >
    
  
    <span
      class="svc-text svc-text--normal svc-tabbed-menu-item__text svc-text--bold"
      data-bind="text: title, css: { 'svc-text--bold': active }"
    >
      Menu Item
    </span>
    

  </div>
  

</svc-tabbed-menu-item>
`;

exports[`Storyshots Toolbox Toolbox 1`] = `
<svc-toolbox
  params="categories: toolboxCategories"
>
  <div
    class="svc-toolbox"
  >
    
  
    <div
      class="svc-toolbox__category"
    >
      
    
      <!-- ko foreach: items -->
      
    
      <div
        class="svc-toolbox__tool"
        data-bind="css: $data.css, visible: $data.visible === undefined || $data.visible, style: { visibility : $data.isVisible ? 'visible': 'hidden' }"
      >
        
      
        <!-- ko if: $data.needSeparator -->
        
      
        <div
          class="svc-toolbox__category-separator"
        />
        
      
        <!-- /ko -->
        
      
        <!-- ko component: { name: $data.component || 'svc-toolbox-item', params: { item: $data, creator: $parents[1].creator } } -->
        
      
        <!-- /ko -->
        
    
      </div>
      
    
      <!-- /ko -->
      
  
    </div>
    

  </div>
  

</svc-toolbox>
`;
